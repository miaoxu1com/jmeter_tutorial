参考文章
https://blog.csdn.net/weixin_44904239/article/details/135091284
少了一个分号，beanshell脚本必须用分号结尾
https://blog.csdn.net/weixin_45213315/article/details/138125163
可以调用多个jar包，调用第三方jar包放入apache-jmeter-5.6.3\lib\ext 库文件夹下即可，然后按需导入调用
https://www.cnblogs.com/tangsong41/p/12586320.html
https://www.cnblogs.com/lgs-tech/p/17847210.html

jmeter中的扳手在压测中是新起一个线程去操作的，所以用beanshell 调用外部代码/外部脚本比较合适，beanshell不起新线程
beanshell

import java.util.UUID;
import org.apache.commons.codec.digest.DigestUtils;
import com.alibaba.fastjson.JSONObject;
import java.util.Calendar;
import AesUtil;
import RsaUtil;
import SignUtil;

import 包名.类名
#  必须要以;结尾负责报错
Calendar cal = Calendar.getInstance();
Long daytime = cal.getTimeInMillis();
timestamp = String.valueOf(daytime);
Request request = new Request();
EncRequest encRequest = new EncRequest();
request.setOutId(UUID.randomUUID().toString().replace("-", ""));
String phoneNoMd5 = DigestUtils.md5Hex("15573756155");
String servicePublicKey = "";
String ownPrivateKey = "";
String appId="";
String version="1.0";
JSONObject jsonObject = new JSONObject();
jsonObject.put("phoneNoMd5", phoneNoMd5);
request.setBizContent(jsonObject.toJSONString());
encRequest.setAppId(appId);
encRequest.setVersion(version);
encRequest.setTimestamp(daytime);
encRequest.setOutId(request.getOutId());
String outid = request.getOutId();
String reqIv = AesUtil.genIv();
String reqSecretKey = AesUtil.genKey();
String encReqIv = RsaUtil.encrypt(reqIv, servicePublicKey);
String encReqSecretKey = RsaUtil.encrypt(reqSecretKey, servicePublicKey);
encRequest.setReqIv(encReqIv);
encRequest.setReqSecretKey(encReqSecretKey);
String encBizContent = AesUtil.encryptByCBC(request.getBizContent(), reqSecretKey, reqIv);
encRequest.setBizContent(encBizContent);
String signStr = SignUtil.getSignStr(BeanUtil.beanToMap(encRequest));
String sign = SignUtil.sign(signStr, ownPrivateKey);
log.info(timestamp);
vars.put("phone",phoneNoMd5);
vars.put("outId",outid);
vars.put("timestamp",timestamp);
vars.put("reqSecretKey",encReqSecretKey);
vars.put("reqIv",encReqIv);
vars.put("sign",sign);
vars.put("bizContent",encBizContent);



jmeter勾选自动重定向请求时如果重定向，就会在结果树中少一个请求
保持连接 减少线程开销
跟踪重定向

前置和后置 取样器调用区别
https://www.cnblogs.com/Lily-Li/p/16859752.html

查看日志，点击右上角感叹号，可以看到日志


创建一个jar application项目 pom文件中引入maven项目依赖
lib文件夹中放入jar文件
idea jar包调试找到目录com.开头的文件夹就是包文件夹
然后在自己创建一个java类demo代码放入main下,创建main是为了方便调试jar包

idea插件市场安装插件JarEditor后，可以在.class反编译文件中看到一个切换到Jar Editor的tab页 可以直接编辑原jar  这样就可以在原有jar包上二次修改满足自己的需求，不需要再反编译重新 编写一遍逻辑


jar反编译比对
https://www.crifan.org/java_decompiler_comparison_jd_gui_cfr_procyon_jadx/
JD-GUI参考
https://blog.csdn.net/chenchunlin526/article/details/78259682
JD-IntelliJ属于Java Decompiler项目（JD项目）下个Intellij插件化的运行方式的反编译插件
JD-GUI是属于Java Decompiler项目（JD项目）下个的图形化运行方式的反编译器。
JD-GUI 是一个用 C++ 开发的 Java 反编译工具，由 Pavel Kouznetsov开发，支持Windows、Linux和苹果Mac Os三个平台。
而且提供了Eclipse平台下的插件JD-Eclipse，Intellij平台下的插件JD-Intellij。
JD-GUI不需要安装，直接点击运行，可以反编译jar，class文件。

idea常用jar包
https://www.cnblogs.com/stars-one/p/11930390.html
https://blog.csdn.net/qq_48299903/article/details/120231242

jar分析用jadx支持智能跳转，全部保存伪代码导出的就是源码
jd-gui它可以动态地打开.class文件或.jar文件并直接显示反编译后Java源代码。

apk加固特征，逆向脱壳
https://blog.csdn.net/weixin_44032232/article/details/109556934

pycryptodome支持aes和rsa签名
https://pythonmania.org/cryptography-vs-pycryptodome/

